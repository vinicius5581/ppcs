{"version":3,"sources":["components/ItemDetails.js","components/Items.js","components/InvoicesAndReceipts.js","components/AddItem.js","components/App.js","serviceWorker.js","index.js"],"names":["ItemDetails","react_default","a","createElement","this","props","itemId","Component","ITEMS_LIST","vendor","description","unitBuyPrice","Items","renderItemsListHeaders","className","renderItemRow","item","Link","to","renderItemsList","_this","map","match","params","id","components_ItemDetails","InvoicesAndReceipts","AddItem","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5b46a4a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ItemDetails extends Component {\n  render() {\n    return (\n        <p>Item {this.props.itemId}</p>\n    );\n  }\n}\n\nexport default ItemDetails;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport ItemDetails from './ItemDetails';\nimport './Items.css';\n\nconst ITEMS_LIST = [\n    {\n        vendor: 'Marshalls',\n        description: 'key chain',\n        unitBuyPrice: 5.90\n    }\n]\n\nclass Items extends Component {\n    renderItemsListHeaders = () => (\n        <div className='listHeader'>\n            <div>Vendor</div>\n            <div>Location</div>\n            <div>Purchase date</div>\n            <div>Lot #</div>\n            <div>Invoice #</div>\n            <div>Invoice file</div>\n            <div>Receipt #</div>\n            <div>Receipt file</div>\n            <div>Paid by</div>\n            <div>Vendor SKU / UPC</div>\n            <div>Item SKU / UPC</div>\n            <div>Vendor description</div>\n            <div>Qty</div>\n            <div>Unit price</div>\n            <div>Total Price</div>\n            <div>History</div>\n        </div>\n        \n    )\n\n    renderItemRow = item => (\n        <div className='listRow'>\n            <div>{item.vendor}</div>\n            <div>{item.description}</div>\n            <div>{item.unitBuyPrice}</div>\n            <Link to=\"/items/a\">Item a</Link>\n        </div>\n    )\n\n    renderItemsList = () => (\n        <div className='list'>\n            {this.renderItemsListHeaders()}\n            {ITEMS_LIST.map(item => this.renderItemRow(item))}\n        </div>\n    )\n\n    render() {\n        const itemId = this.props.match.params.id;\n        \n        return (\n            <div className='items'>\n                <header>\n                    <h1>Items</h1>\n                    <nav>\n                        <Link to=\"/additem\">Add Item</Link>\n                        <Link to=\"/addinvoice\">Add Invoice</Link>\n                        <Link to=\"/addreceipt\">Add Receipt</Link>\n                    </nav>                   \n                </header>\n                <main>\n                    {itemId && <ItemDetails itemId={itemId}/>}\n                    {!itemId && this.renderItemsList()}\n                </main>\n            </div>\n\n        )\n    }\n}\n\nexport default Items;","import React, {Component} from 'react';\n\nconst InvoicesAndReceipts = () => (\n    <p>Invoices and Receipts</p>\n)\n\nexport default InvoicesAndReceipts;","import React, { Component } from 'react';\n\nclass AddItem extends Component {\n  render() {\n    return (\n        <p>Add item</p>\n    );\n  }\n}\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport Items from './Items';\nimport InvoicesAndReceipts from './InvoicesAndReceipts';\nimport AddItem from './AddItem';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n\n      <Router>\n        <div className=\"App\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/items/\">Items</Link>\n                <ul>\n                  <li>\n                    <Link to=\"/additem/\">Add Item</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/addinvoice/\">Add Invoice</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/addreceipt/\">Add Receipt</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/addlot/\">Add Lot</Link>\n                  </li>\n                </ul>\n              </li>              \n              <li>\n                <Link to=\"/invoicesandreceipts/\">Invoices & Receipts</Link>\n              </li>\n              <li>\n                <Link to=\"/vendors/\">Vendors</Link>\n              </li>\n              <li>\n                <Link to=\"/paymentsmethods/\">Payment methods</Link>\n              </li>\n              <li>\n                <Link to=\"/analytics/\">Analytics</Link>\n              </li>\n            </ul>\n          </nav>\n          <main>\n            <Route exact path=\"/\" component={Items} />\n            <Route exact path=\"/items\" component={Items} />\n            <Route exact path=\"/items/:id\" component={Items} />\n            <Route path=\"/invoicesandreceipts\" component={InvoicesAndReceipts} />\n            <Route path=\"/additem\" component={AddItem} />\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}